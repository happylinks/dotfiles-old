#!/usr/bin/env sh

# mx
# version 1.1

# Contributors:
#   Wynn Netherland - http://github.com/pengwynn
#   Adam Jahnke - http://github.com/adamyonk
#   Yoshua Wuyts - https://github.com/yoshuawuyts
#   Ahmed El Gabri - https://github.com/ahmedelgabri

# Usage:
#   mx [session] [subdirectory (optional)]

# To 'auto-launch' projects, you'll need a $PROJECTS dir where you keep code
# sorted like so: $PROJECTS/<org or user>/<repo>.
# So, a typical workflow would look like:
#   $ hub clone pengwynn/octonaut $PROJECTS/pengwynn/octonaut
#   $ mx octonaut

# If `mx` is called with a <session> name, and there is no valid repo inside
# $PROJECTS, a new tmux session will be initialized in the current working
# directory with a name of <session>

set -e

if ! (tmux list-sessions | cut -d ':' -f 1 | grep -q ^"$SESSION"\$); then
  mx-init
fi

get_session () {
  if [ -z "$1" ]; then
    # tmux 1.9a+ doesn't like .'s in session names
    pwd | awk -F"/" '{print $NF}'
  else
    echo "$1" | awk -F"/" '{print $NF}'
  fi
}

SESSION="$(get_session "$1")"

if ! (tmux list-sessions | cut -d':' -f1 | grep -q ^"$SESSION"\$); then
  WORKINGDIR=""

  # To handle the legacy structue I had, TODO: change the folder structure.
  if [ -d "$PROJECTS"/"$SESSION"/"$2" ]; then
    WORKINGDIR="$PROJECTS"/"$SESSION"/"$2"
  elif [ -d "$PROJECTS"/"$SESSION" ]; then
    WORKINGDIR="$PROJECTS"/"$SESSION"
  else
    WORKINGDIR="$HOME"
  fi

  if [ ! -z "$WORKINGDIR" ]; then
    cd $WORKINGDIR;
    tmux new-session -d -s "$SESSION"
    tmux select-window -t "$SESSION"
    # Sometimes I need to setup some project specific stuff & run some commands
    if [ -f "./start" ]; then
      tmux send-keys './start' C-m
    fi
  fi

  tmux link-window -s _shared:mail -t 6
  tmux link-window -s _shared:rss -t 7
  tmux link-window -s _shared:dotfiles -t 8
  tmux link-window -s _shared:log -t 9
  tmux link-window -s _shared:weechat -t 10
  tmux select-window -t 1
fi

if [ -z "$TMUX" ]; then
  tmux attach -t "$SESSION";
else
  tmux switch-client -t "$SESSION"
fi
