# vim: ft=tmux tw=0

# Enable true color support, the terminal info is from the outside of tmux
# https://sunaku.github.io/tmux-24bit-color.html#usage
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# use C-a, since it's on the home row and easier to hit than C-b
# unbind-key C-b
# set -g prefix C-Space
set -g prefix C-a
unbind-key C-a
bind-key C-a send-prefix

set -g history-limit 100000

# Neovim https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -g escape-time 0
# Allow the arrow key to be used immediately after changing windows
set -g repeat-time 0

# increase repeat time for repeatable commands
# set -g repeat-time 1000

set -g focus-events on

# tmux messages are displayed for 1.5 seconds
set -g display-time 1500

# set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# use vim keybindings in copy mode
setw -g mode-keys vi
setw -g other-pane-height 25
setw -g other-pane-width 80


# provide access to the clipboard for pbpaste, pbcopy
# set -g default-command "reattach-to-user-namespace -l zsh"
setw -g automatic-rename on

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# =======================================================================
# = Key Bindings
# =======================================================================

# Make the current window the first window
bind-key T swap-window -t 1

# quick pane cycling
# unbind ^A
# bind ^A select-pane -t :.+

# reload ~/.tmux.conf using PREFIX r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# https://github.com/christoomey/vim-tmux-navigator
# https://blog.bugsnag.com/tmux-and-vim/
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind-key -n C-h run "($is_vim && tmux send-keys C-h) || tmux select-pane -L"
bind-key -n C-j run "($is_vim && tmux send-keys C-j)  || ($is_fzf && tmux send-keys C-j) || tmux select-pane -D"
bind-key -n C-k run "($is_vim && tmux send-keys C-k) || ($is_fzf && tmux send-keys C-k)  || tmux select-pane -U"
bind-key -n C-l run "($is_vim && tmux send-keys C-l) || tmux select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# mouse behavior
set -g mouse on
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

# Quick kill-session
bind-key C-q confirm-before 'kill-session'
bind-key : command-prompt
#bind-key l choose-tree -u

bind-key -n S-Right next-window
bind-key -n S-Left previous-window

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key C-o rotate-window
#bind-key C-l send-keys 'C-l'

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

# bind-key a last-pane
bind-key q display-panes

unbind-key c
bind-key c new-window -c '#{pane_current_path}'

# Resizing (mouse also works).
unbind-key Left
bind-key -r Left resize-pane -L 5
unbind-key Right
bind-key -r Right resize-pane -R 5
unbind-key Down
bind-key -r Down resize-pane -D 5
unbind-key Up
bind-key -r Up resize-pane -U 5

# https://github.com/zanshin/dotfiles/blob/master/tmux/tmux.conf
# ---------------------
# Copy & Paste
# ---------------------

# Save entire tmux history to a file - file will be on machine where tmux is
# running
bind-key * command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# setw -g display-panes-time 1500

# ----------------------
# set some pretty colors
# ----------------------
# colorize messages in the command line
set -g message-style bg=default,fg=brightred #base02
set -g message-command-style bg=black,fg=blue

# loud or quiet?
setw -g monitor-activity on
set -g visual-activity on
# set -g visual-bell off
# set -g bell-action none

# ----------------------
# Panes
# -----------------------
set -g pane-border-style bg="#282C34",fg="#455061"
set -g pane-active-border-style bg="#282C34",fg="#5FADE9"
setw -g pane-border-status top
setw -g pane-border-format ' #P: #{pane_current_command} '
setw -g pane-border-style bg=default,fg=default

# ----------------------
# Status Bar
# -----------------------
set -g status on

set -g status-interval 5
set -g status-justify left
set -g status-position bottom
set -g status-style bg=default,fg=default,dim
set -g status-left ""
set -g status-right '#[fg=#63AEE7,bg=default]#(date "+%H:%M")'

setw -g window-status-activity-style bg=default,fg=red
setw -g window-status-current-style bg=default,fg=cyan

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g automatic-rename-format '#{pane_current_command}:#{b:pane_current_path}'
set-option -g set-titles on

set -g status-keys vi
setw -g mouse on

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window
